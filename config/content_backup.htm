<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<p>W4</p>
<h2>W4</h2>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>網際網路筆記</h1>
<p><span>【2001:288:6004:17::53】:3128</span><br/><span>140.130.17.53:3128</span><br/><span>140.130.17.254（系gateway 通道）</span><br/><span>140.130.1.*（校主幹）</span><br/><span>NAT network address translation </span><br/><span>internal network (內部網路）192.168.*</span><br/><span>IP address mapping 對應</span><br/><span>router 路由器</span><br/><span>route 路徑</span><br/><span>remote login 遠端登入</span><br/><br/><span>packet封包</span><br/><span>【2001：288：6004：17::53】：3128</span><br/><br/><span>中華電信 dns server </span><br/><span>2001:b000:168::1</span><br/><span>dns ==domain name server 符號名稱伺服器</span><br/><br/><span>www.nfu.edu.tw==ipv4/ipv6 address</span><br/><br/><span>client &lt;-&gt;server</span><br/><span>WWW</span><br/><span>brower&lt;-&gt;WWW server</span><br/><span>http==hypertext transfer protocol 超文件傳輸協定</span><br/><span>sftp client &lt;-&gt;sftp server </span><br/><span>Afro ==secure file transfer protocol 安全模式下的檔案傳輸協定</span><br/><br/><br/><span>TYPES OF COMPUTER</span><br/><span>1.super computer 超級電腦</span><br/><span>2.mainframe 伺服器主機（cluster叢集）</span><br/><span>3.server 伺服器（實地、虛擬）</span><br/><span>4.personal computer</span><br/><span>5.microcontroler</span><br/><span>6.mobile phone</span><br/><br/><span>batch computation (批次運算)</span><br/><br/><span>0~255==2**8</span><br/><br/><br/><span>tcp/ip ==transmision control protocol/internet protocol</span></p>
<h1>W9</h1>
<h2>電腦軟硬體設備簡介</h2>
<p>主機的類型</p>
<p>1.super computer超級電腦</p>
<p>2.mainframe 伺服器主機</p>
<p>3.serer 伺服器</p>
<p>4.personal computer</p>
<p>5.microcontroler</p>
<p>6.mobile phne</p>
<p></p>
<h2>網路架構與設定簡介</h2>
<p>第1步驟</p>
<p>進入cmsimde 資料夾</p>
<p>第2步驟</p>
<p>以python 開啟</p>
<p>更改簡介</p>
<p>轉靜態</p>
<p>push</p>
<h1>W6</h1>
<p>portable obs</p>
<p>google hangout meet</p>
<p>streeming and recording</p>
<h4>讓手機可以利用電腦熱點上網：</h4>
<p>採用 <a href="https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/">https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/</a></p>
<p>將此一 USB Wifi adapter 連接電腦後, 若網路為 IPv4 協定時, 可以透過"設定 -&gt; 網路和網際網路 -&gt; 行動熱點", 選擇開啟並編輯"網路名稱與網路密碼"後, 讓至多 8 台手機透過熱點連線上網。</p>
<p>但是因為目前 Windows 10 並<a href="https://answers.microsoft.com/en-us/windows/forum/all/support-ipv6-in-mobile-hotspot-network-sharing/8801ea57-c6dc-4c10-afe6-192879a85835">未提供 IPv6 網路協定下的網路熱點功能</a>, 因此在純 IPv6 網路協定下無法使用"行動熱點"服務。</p>
<hr/>
<p>利用手機鏡頭當作 webcam:</p>
<p>Android:<span> </span><a href="https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows">https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows</a> <br/>iPhone:<span> </span><a href="https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/">https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/</a> </p>
<hr/>
<h4>需要 clone 個人倉儲時：</h4>
<p>git clone --recurse-submodules 倉儲_url.git</p>
<p>例如: git clone --recurse-submodules<span> </span><a href="https://github.com/mdecourse/wcmj2020.git">https://github.com/mdecourse/wcmj2020.git</a></p>
<h4>現場直播的 audio 錄音設定</h4>
<p>在電腦輔助設計室進行直播時, 由於現場有擴音設備, 因此採用 OBS 串流至 Youtube 的最佳收音並非從 Webcam 的麥克風, 而是從擴音器以 audio outpu 連接到電腦的麥克風插槽, 然後將 OBS 的 audio 設定為從電腦的麥克風收音.</p>
<h1>W10</h1>
<p><span><span><span><span></span></span></span></span>1. 利用 putty 建立 public key / private key</p>
<p>2. 利用cmd 將 public key 轉成 github接受的格式</p>
<p>3. 將轉換後的 public key 放到 github-setting 中的SSH keys</p>
<p>4. <span>利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定.</span></p>
<p>5. 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa.開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection-&gt;SSH-&gt;Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. 並在 Connection-&gt;Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128.</p>
<p><span>6. 最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線</span></p>
<p><span>之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push.</span></p>
<p>p.s.  若找不到.git<span>試著將隱藏目錄的設定移除, 看能否進入 .git 目錄, 然後看到 config 檔案.</span></p>
<p></p>