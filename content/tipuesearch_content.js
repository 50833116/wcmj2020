var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n W4 \n', 'tags': '', 'url': 'About.html'}, {'title': 'W4', 'text': '', 'tags': '', 'url': 'W4.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': '網際網路筆記', 'text': '【2001:288:6004:17::53】:3128 140.130.17.53:3128 140.130.17.254（系gateway 通道） 140.130.1.*（校主幹） NAT network address translation  internal network (內部網路）192.168.* IP address mapping 對應 router 路由器 route 路徑 remote login 遠端登入 packet封包 【2001：288：6004：17::53】：3128 中華電信 dns server  2001:b000:168::1 dns ==domain name server 符號名稱伺服器 www.nfu.edu.tw==ipv4/ipv6 address client <->server WWW brower<->WWW server http==hypertext transfer protocol 超文件傳輸協定 sftp client <->sftp server  Afro ==secure file transfer protocol 安全模式下的檔案傳輸協定 TYPES OF COMPUTER 1.super computer 超級電腦 2.mainframe 伺服器主機（cluster叢集） 3.server 伺服器（實地、虛擬） 4.personal computer 5.microcontroler 6.mobile phone batch computation (批次運算) 0~255==2**8 tcp/ip ==transmision control protocol/internet protocol \n', 'tags': '', 'url': '網際網路筆記.html'}, {'title': 'W9', 'text': '', 'tags': '', 'url': 'W9.html'}, {'title': '電腦軟硬體設備簡介', 'text': '主機的類型 \n 1.super computer超級電腦 \n 2.mainframe 伺服器主機 \n 3.serer 伺服器 \n 4.personal computer \n 5.microcontroler \n 6.mobile phne \n \n', 'tags': '', 'url': '電腦軟硬體設備簡介.html'}, {'title': '網路架構與設定簡介', 'text': '第1步驟 \n 進入cmsimde 資料夾 \n 第2步驟 \n 以python 開啟 \n 更改簡介 \n 轉靜態 \n push \n', 'tags': '', 'url': '網路架構與設定簡介.html'}, {'title': 'W6', 'text': 'portable obs \n google hangout meet \n streeming and recording \n 讓手機可以利用電腦熱點上網： \n 採用\xa0 https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/ \n 將此一 USB Wifi adapter 連接電腦後, 若網路為 IPv4 協定時, 可以透過"設定 -> 網路和網際網路 -> 行動熱點", 選擇開啟並編輯"網路名稱與網路密碼"後, 讓至多 8 台手機透過熱點連線上網。 \n 但是因為目前 Windows 10 並 未提供 IPv6 網路協定下的網路熱點功能 , 因此在純 IPv6 網路協定下無法使用"行動熱點"服務。 \n \n 利用手機鏡頭當作 webcam: \n Android: \xa0 https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows \xa0 iPhone: \xa0 https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/ \xa0 \n \n 需要 clone 個人倉儲時： \n git clone --recurse-submodules 倉儲_url.git \n 例如:\xa0git clone --recurse-submodules \xa0 https://github.com/mdecourse/wcmj2020.git \n 現場直播的 audio 錄音設定 \n 在電腦輔助設計室進行直播時, 由於現場有擴音設備, 因此採用 OBS 串流至 Youtube 的最佳收音並非從 Webcam 的麥克風, 而是從擴音器以 audio outpu 連接到電腦的麥克風插槽, 然後將 OBS 的 audio 設定為從電腦的麥克風收音. \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W10', 'text': '1. 利用 putty 建立 public key / private key \n 2. 利用cmd 將 public key 轉成 github接受的格式 \n 3. 將轉換後的 public key 放到 github-setting 中的SSH keys \n 4.\xa0 利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定. \n 5. 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa.開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection->SSH->Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位.\xa0並在 Connection->Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128. \n 6. 最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線 \n 之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push. \n p.s.\xa0 若找不到.git 試著將隱藏目錄的設定移除, 看能否進入 .git 目錄, 然後看到 config 檔案. \n', 'tags': '', 'url': 'W10.html'}]};